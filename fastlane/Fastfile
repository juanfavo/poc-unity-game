default_platform(:ios)

platform :ios do
  desc "Run Unit Tests"
  lane :unit_tests do |options|
    run_tests(
      scheme: options[:scheme],
      project: options[:xcodeproj],
      devices: [“iPhone 11 Pro Max”]
    )
  end

  desc "Run UI Tests"
  lane :ui_tests do |options|
    run_tests(
      project: "Unity-iPhone.xcodeproj",
      devices: ["iPhone 11 Pro Max"],
      scheme: "Unity-iPhoneUITests"
    )
  end

  desc "IOS lanes"
  lane :update_team do |options|
    update_project_team(
      path: options[:xcodeproj],
      teamid: options[:teamid]
    )
  end

  desc "Update provisioning profile"
  lane :update_provisioning_profile do |options|
    update_project_provisioning(
      xcodeproj: options[:xcodeproj],
      profile: options[:profile],
      target_filter: options[:target],
      code_signing_identity: options[:code_signing]
    )
  end

  desc "EDGE"
  lane :edge do |options|
    api_key = app_store_connect_api_key(
      issuer_id: ENV["ISSUER_ID"],
      key_id: ENV["KEY_ID"],
      key_content: ENV["KEY_CONTENT"],
    )

    upload_to_testflight(
      api_key: api_key,
      ipa: options[:file],
      groups: options[:group],
      changelog: options[:changelog],
      wait_processing_timeout_duration: 300,
      distribute_external: true,
      notify_external_testers: true,
      reject_build_waiting_for_review: false,
      expire_previous_builds: false,
      submit_beta_review: true,
      skip_submission: true,
      skip_waiting_for_build_processing: true,
    )
  end

  desc "Release"
  lane :release do |options|
    api_key = app_store_connect_api_key(
      issuer_id: ENV["ISSUER_ID"],
      key_id: ENV["KEY_ID"],
      key_content: ENV["KEY_CONTENT"],
    )

    upload_to_app_store(
      api_key: api_key,
      ipa: options[:file],
      skip_binary_upload: false,
      skip_screenshots: true,
      skip_metadata: true,
      reject_if_possible: true,
      automatic_release: true,
      submit_for_review: false,
      precheck_include_in_app_purchases: false,
      force: true,
    )
  end

  desc "Install Profiles and Build My App"
  lane :build_ipa do
    install_provisioning_profile(
      path: "FULL_PATH_OF_YOUR_PROVISIONING_PROFILE"
    )
    gym(
      workspace: "Unity-iPhone.xcworkspace",
      scheme: "Unity-iPhone",
      output_directory: "DIRECTORY_WHERE_YOUR_IPA_WILL_BE_SAVED",
      output_name: "Unity-iPhoneFastlane",
      export_method: "app-store",
      include_bitcode: false,
      clean: true
    )
  end

  desc "Publish App to TestFlight"
  lane :publish_to_testflight do
    # Build your app
    build_ipa
    # Set up App Store Connect API Key to avoid 2FA
    api_key = app_store_connect_api_key(
      key_id: "YOUR_API_KEY",
      issuer_id: "ISSUER_ID",
      key_filepath: "PATH_OF_API_KEY_FILE/AuthKey_YOUR_API_KEY.p8",
      duration: 1200,
      in_house: false
    )
    # Distribute App to TestFlight
    pilot(
      api_key: api_key,
      ipa:  "output_directory/output_name.ipa",
      skip_waiting_for_build_processing: true
    )
  end
end